

from os import path

from pyrogram import Client
from pyrogram.types import Message, Voice

from callsmusic import callsmusic, queues

import converter
from downloaders import youtube

from config import BOT_NAME as bn, DURATION_LIMIT, UPDATES_CHANNEL, AUD_IMG, QUE_IMG, GROUP_SUPPORT
from helpers.filters import command, other_filters
from helpers.decorators import errors
from helpers.errors import DurationLimitError
from helpers.gets import get_url, get_file_name
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

@Client.on_message(command("stream") & other_filters)
@errors
async def stream(_, message: Message):

    lel = await message.reply("üîÅ **·ë≠ Ä·¥è·¥Ñ·¥áÍú±Íú±…™…¥…¢....**")
    sender_id = message.from_user.id
    sender_name = message.from_user.first_name

    keyboard = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        text="·é∂ Ä·¥è·¥ú·¥ò",
                        url=f"https://t.me/BLAZE_SUPPORT"),
                    InlineKeyboardButton(
                        text="·ëï ú·¥Ä…¥…¥·¥á ü",
                        url=f"https://t.me/THE_BLAZE_NETWORK")
                ]
            ]
        )

    audio = (message.reply_to_message.audio or message.reply_to_message.voice) if message.reply_to_message else None
    url = get_url(message)

    if audio:
        if round(audio.duration / 60) > DURATION_LIMIT:
            raise DurationLimitError(
                f"‚ùå VIDEOS LONGER THAN {DURATION_LIMIT} MINUTE(s) AREN'T ALLOWED TO PLAY...!"
            )

        file_name = get_file_name(audio)
        file_path = await converter.convert(
            (await message.reply_to_message.download(file_name))
            if not path.isfile(path.join("downloads", file_name)) else file_name
        )
    elif url:
        file_path = await converter.convert(youtube.download(url))
    else:
        return await lel.edit_text("·é∂…™·¥†·¥á ’è·¥è·¥ç·¥á·¥õ ú…™…¥…¢Íú± ·í™…™·¥ã·¥á ·ó©·¥ú·¥Ö…™·¥è ·ñ¥…™ ü·¥áÍú± ·ó©…¥·¥Ö Y·¥è·¥úT·¥ú ô ·í™…™…¥·¥ã...!")

    if message.chat.id in callsmusic.pytgcalls.active_calls:
        position = await queues.put(message.chat.id, file=file_path)
        await message.reply_photo(
        photo=f"{QUE_IMG}",
        reply_markup=keyboard,
        caption=f"#‚É£  Y·¥è·¥ú Ä ·ñá·¥áQ·¥ú·¥áÍú±·¥õ·¥á·¥Ö ’è·¥è…¥…¢ I…¥ **Q·¥ú·¥á·¥ú·¥á** ·ó©·¥õ ·ë≠·¥èÍú±…™·¥õ…™·¥è…¥ {position} !\n\n‚ö° __·ë≠·¥è·¥°·¥á Ä·¥á·¥Ö ·ó∑ è {bn} ·ó∑ ü·¥Ä·¥¢·¥á ·ëé·¥á·¥õ·¥°·¥è Ä·¥ã__")
        return await lel.delete()
    else:
        callsmusic.pytgcalls.join_group_call(message.chat.id, file_path)
        costumer = message.from_user.mention
        await message.reply_photo(
        photo=f"{AUD_IMG}",
        reply_markup=keyboard,
        caption=f"üí° **·ëé·¥è·¥° ·ë≠ ü·¥Ä è…™…¥…¢** ·ó© ’è·¥è…¥…¢ ·ñá·¥áQ·¥ú·¥á·¥õ·¥á·¥Ö ·ó∑ è {costumer} !\n\n‚ö° __·ë≠·¥è·¥°·¥á Ä·¥á·¥Ö ·ó∑ è {bn} ·ó∑ ü·¥Ä·¥¢·¥á ·ëé·¥á·¥õ·¥°·¥è Ä·¥ã__"
        )
        return await lel.delete()
